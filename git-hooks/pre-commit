#!/bin/zsh
set -e

#===============================================================================
#  update caches for blog posts
#===============================================================================

# search for any modified paths 
# git diff --name-only --cached | grep -q "^blog/"

# list all commits which modify a file and output as JSON
commits_as_json() {
  paste -sd ',' <(git log --date=iso-strict --pretty=format:'{"sha":     "%H",      "message": "%s",      "date":    "%aI",      "link":    "https://github.com/awwsmm/awwsmm.com/commit/%H"}' --follow -- blog/$1.md) |\
    sed 's/",/",\n  /g' | sed 's/}$/\n      }\n    ]\n  ]\n]/g' | sed "s/^{/[\n  [\n    \"$1\",\n    [\n      {\n        /g" | sed 's/},{/\n      },\n      {\n        /g'
}

# for each blog post, cache commits which reference it
cache_commits() {
  echo "Refreshing cache at caches/blog/$1.json"
  commits_as_json $1 > "caches/blog/$1.json"
  git add "caches/blog/$1.json"
}

# for each blog post file, cache all commits which reference it
for file in blog/*; do
  cache_commits $(echo $file | sed 's@blog/@@g' | sed 's@.md@@g')
done

#===============================================================================
#  update caches for projects
#===============================================================================

# query GitHub to get the commits for a given project
github_commits() {
  curl -s https://api.github.com/repos/awwsmm/$1/commits -H "Accept: application/json" | sed 's/^/    /g'
}

# format the commits as JSON
commits_json() {
  echo "Refreshing cache at caches/project/$1.json"
  printf "[\n  [\n    \"$1\",\n" > caches/project/$1.json
  github_commits $1 >> caches/project/$1.json
  printf "\n  ]\n]" >> caches/project/$1.json
}

# for each project directory, cache all commits for that project
for project in projects/*/; do
   commits_json $(echo $project | sed 's@projects/@@g' | sed 's@/$@@g')
done